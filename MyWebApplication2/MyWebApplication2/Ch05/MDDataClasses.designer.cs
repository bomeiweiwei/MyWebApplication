#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     這段程式碼是由工具產生的。
//     執行階段版本:4.0.30319.18010
//
//     對這個檔案所做的變更可能會造成錯誤的行為，而且如果重新產生程式碼，
//     變更將會遺失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace MyWebApplication2.Ch05
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="test")]
	public partial class MDDataClassesDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region 擴充性方法定義
    partial void OnCreated();
    partial void Inserttest(test instance);
    partial void Updatetest(test instance);
    partial void Deletetest(test instance);
    partial void Inserttest_talk(test_talk instance);
    partial void Updatetest_talk(test_talk instance);
    partial void Deletetest_talk(test_talk instance);
    #endregion
		
		public MDDataClassesDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["testConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public MDDataClassesDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public MDDataClassesDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public MDDataClassesDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public MDDataClassesDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<test> test
		{
			get
			{
				return this.GetTable<test>();
			}
		}
		
		public System.Data.Linq.Table<test_talk> test_talk
		{
			get
			{
				return this.GetTable<test_talk>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.test")]
	public partial class test : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private System.Nullable<System.DateTime> _test_time;
		
		private string _class;
		
		private string _title;
		
		private string _summary;
		
		private string _article;
		
		private string _author;
		
		private System.Nullable<int> _hit_no;
		
		private System.Nullable<int> _get_no;
		
		private System.Nullable<int> _email_no;
		
		private System.Nullable<char> _approved;
		
		private EntitySet<test_talk> _test_talk;
		
    #region 擴充性方法定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void Ontest_timeChanging(System.Nullable<System.DateTime> value);
    partial void Ontest_timeChanged();
    partial void OnclassChanging(string value);
    partial void OnclassChanged();
    partial void OntitleChanging(string value);
    partial void OntitleChanged();
    partial void OnsummaryChanging(string value);
    partial void OnsummaryChanged();
    partial void OnarticleChanging(string value);
    partial void OnarticleChanged();
    partial void OnauthorChanging(string value);
    partial void OnauthorChanged();
    partial void Onhit_noChanging(System.Nullable<int> value);
    partial void Onhit_noChanged();
    partial void Onget_noChanging(System.Nullable<int> value);
    partial void Onget_noChanged();
    partial void Onemail_noChanging(System.Nullable<int> value);
    partial void Onemail_noChanged();
    partial void OnapprovedChanging(System.Nullable<char> value);
    partial void OnapprovedChanged();
    #endregion
		
		public test()
		{
			this._test_talk = new EntitySet<test_talk>(new Action<test_talk>(this.attach_test_talk), new Action<test_talk>(this.detach_test_talk));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_test_time", DbType="DateTime")]
		public System.Nullable<System.DateTime> test_time
		{
			get
			{
				return this._test_time;
			}
			set
			{
				if ((this._test_time != value))
				{
					this.Ontest_timeChanging(value);
					this.SendPropertyChanging();
					this._test_time = value;
					this.SendPropertyChanged("test_time");
					this.Ontest_timeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="class", Storage="_class", DbType="NVarChar(50)")]
		public string @class
		{
			get
			{
				return this._class;
			}
			set
			{
				if ((this._class != value))
				{
					this.OnclassChanging(value);
					this.SendPropertyChanging();
					this._class = value;
					this.SendPropertyChanged("@class");
					this.OnclassChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_title", DbType="NVarChar(120)")]
		public string title
		{
			get
			{
				return this._title;
			}
			set
			{
				if ((this._title != value))
				{
					this.OntitleChanging(value);
					this.SendPropertyChanging();
					this._title = value;
					this.SendPropertyChanged("title");
					this.OntitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_summary", DbType="NVarChar(200)")]
		public string summary
		{
			get
			{
				return this._summary;
			}
			set
			{
				if ((this._summary != value))
				{
					this.OnsummaryChanging(value);
					this.SendPropertyChanging();
					this._summary = value;
					this.SendPropertyChanged("summary");
					this.OnsummaryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_article", DbType="NVarChar(MAX)")]
		public string article
		{
			get
			{
				return this._article;
			}
			set
			{
				if ((this._article != value))
				{
					this.OnarticleChanging(value);
					this.SendPropertyChanging();
					this._article = value;
					this.SendPropertyChanged("article");
					this.OnarticleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_author", DbType="NVarChar(50)")]
		public string author
		{
			get
			{
				return this._author;
			}
			set
			{
				if ((this._author != value))
				{
					this.OnauthorChanging(value);
					this.SendPropertyChanging();
					this._author = value;
					this.SendPropertyChanged("author");
					this.OnauthorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_hit_no", DbType="Int")]
		public System.Nullable<int> hit_no
		{
			get
			{
				return this._hit_no;
			}
			set
			{
				if ((this._hit_no != value))
				{
					this.Onhit_noChanging(value);
					this.SendPropertyChanging();
					this._hit_no = value;
					this.SendPropertyChanged("hit_no");
					this.Onhit_noChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_get_no", DbType="Int")]
		public System.Nullable<int> get_no
		{
			get
			{
				return this._get_no;
			}
			set
			{
				if ((this._get_no != value))
				{
					this.Onget_noChanging(value);
					this.SendPropertyChanging();
					this._get_no = value;
					this.SendPropertyChanged("get_no");
					this.Onget_noChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_email_no", DbType="Int")]
		public System.Nullable<int> email_no
		{
			get
			{
				return this._email_no;
			}
			set
			{
				if ((this._email_no != value))
				{
					this.Onemail_noChanging(value);
					this.SendPropertyChanging();
					this._email_no = value;
					this.SendPropertyChanged("email_no");
					this.Onemail_noChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_approved", DbType="Char(1)")]
		public System.Nullable<char> approved
		{
			get
			{
				return this._approved;
			}
			set
			{
				if ((this._approved != value))
				{
					this.OnapprovedChanging(value);
					this.SendPropertyChanging();
					this._approved = value;
					this.SendPropertyChanged("approved");
					this.OnapprovedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="test_test_talk", Storage="_test_talk", ThisKey="id", OtherKey="test_id")]
		public EntitySet<test_talk> test_talk
		{
			get
			{
				return this._test_talk;
			}
			set
			{
				this._test_talk.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_test_talk(test_talk entity)
		{
			this.SendPropertyChanging();
			entity.test = this;
		}
		
		private void detach_test_talk(test_talk entity)
		{
			this.SendPropertyChanging();
			entity.test = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.test_talk")]
	public partial class test_talk : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private int _test_id;
		
		private System.Nullable<System.DateTime> _test_time;
		
		private string _article;
		
		private string _author;
		
		private string _email;
		
		private EntityRef<test> _test;
		
    #region 擴充性方法定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void Ontest_idChanging(int value);
    partial void Ontest_idChanged();
    partial void Ontest_timeChanging(System.Nullable<System.DateTime> value);
    partial void Ontest_timeChanged();
    partial void OnarticleChanging(string value);
    partial void OnarticleChanged();
    partial void OnauthorChanging(string value);
    partial void OnauthorChanged();
    partial void OnemailChanging(string value);
    partial void OnemailChanged();
    #endregion
		
		public test_talk()
		{
			this._test = default(EntityRef<test>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_test_id", DbType="Int NOT NULL")]
		public int test_id
		{
			get
			{
				return this._test_id;
			}
			set
			{
				if ((this._test_id != value))
				{
					if (this._test.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Ontest_idChanging(value);
					this.SendPropertyChanging();
					this._test_id = value;
					this.SendPropertyChanged("test_id");
					this.Ontest_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_test_time", DbType="DateTime")]
		public System.Nullable<System.DateTime> test_time
		{
			get
			{
				return this._test_time;
			}
			set
			{
				if ((this._test_time != value))
				{
					this.Ontest_timeChanging(value);
					this.SendPropertyChanging();
					this._test_time = value;
					this.SendPropertyChanged("test_time");
					this.Ontest_timeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_article", DbType="NVarChar(MAX)")]
		public string article
		{
			get
			{
				return this._article;
			}
			set
			{
				if ((this._article != value))
				{
					this.OnarticleChanging(value);
					this.SendPropertyChanging();
					this._article = value;
					this.SendPropertyChanged("article");
					this.OnarticleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_author", DbType="VarChar(50)")]
		public string author
		{
			get
			{
				return this._author;
			}
			set
			{
				if ((this._author != value))
				{
					this.OnauthorChanging(value);
					this.SendPropertyChanging();
					this._author = value;
					this.SendPropertyChanged("author");
					this.OnauthorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_email", DbType="VarChar(50)")]
		public string email
		{
			get
			{
				return this._email;
			}
			set
			{
				if ((this._email != value))
				{
					this.OnemailChanging(value);
					this.SendPropertyChanging();
					this._email = value;
					this.SendPropertyChanged("email");
					this.OnemailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="test_test_talk", Storage="_test", ThisKey="test_id", OtherKey="id", IsForeignKey=true)]
		public test test
		{
			get
			{
				return this._test.Entity;
			}
			set
			{
				test previousValue = this._test.Entity;
				if (((previousValue != value) 
							|| (this._test.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._test.Entity = null;
						previousValue.test_talk.Remove(this);
					}
					this._test.Entity = value;
					if ((value != null))
					{
						value.test_talk.Add(this);
						this._test_id = value.id;
					}
					else
					{
						this._test_id = default(int);
					}
					this.SendPropertyChanged("test");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
