@model MVCStudy.Models.MEMBER

@{
    ViewBag.Title = "新增會員";
    Layout = "~/Views/Shared/_Layout.cshtml";
}


    <script type="text/javascript">
        function PreviewImage1(imgFile) {
            var pattern = /(\.*.jpg$)|(\.*.png$)|(\.*.jpeg$)|(\.*.gif$)|(\.*.bmp$)/;
            if (!pattern.test(imgFile.value)) {
                alert("只支援jpg/jpeg/png/gif/bmp之格式檔案");
                imgFile.focus();
            }
            else {
                var path;
                if (document.all) {//IE
                    imgFile.select();
                    path = document.selection.createRange().text;
                    document.getElementById("imgPreview1").innerHTML = "";
                    document.getElementById("imgPreview1").style.filter = "progid:DXImageTransform.Microsoft.AlphaImageLoader(enabled='true',sizingMethod='scale',src=\"" + path + "\")";
                }
                else//FF
                {
                    path = URL.createObjectURL(imgFile.files[0]);
                    document.getElementById("imgPreview1").innerHTML = "<img src='" + path + " '  width='100' height='100'/>";
                }
            }
        }
    </script>


<h2>新增會員</h2>

@*@using (Html.BeginForm())*@
@using (Html.BeginForm("Create", "Member", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        @*<h4>MEMBER</h4>*@
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            <label class="control-label col-md-2">信箱</label>
            @*@Html.LabelFor(model => model.mememail, htmlAttributes: new { @class = "control-label col-md-2" })*@
            <div class="col-md-10">
                @Html.EditorFor(model => model.mememail, new { htmlAttributes = new { @class = "form-control", type = "email", required = "required" } })
                @Html.ValidationMessageFor(model => model.mememail, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2">會員密碼</label>
            @*@Html.LabelFor(model => model.mempwd, htmlAttributes: new { @class = "control-label col-md-2" })*@
            <div class="col-md-10">

                @Html.PasswordFor(model => model.mempwd, new { htmlAttributes = new { @class = "form-control", required = "required" } })
                @Html.ValidationMessageFor(model => model.mempwd, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2">會員暱稱</label>
            @*@Html.LabelFor(model => model.memdiminutive, htmlAttributes: new { @class = "control-label col-md-2" })*@
            <div class="col-md-10">
                @Html.EditorFor(model => model.memdiminutive, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.memdiminutive, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2">會員姓名</label>
            @*@Html.LabelFor(model => model.memname, htmlAttributes: new { @class = "control-label col-md-2" })*@
            <div class="col-md-10">
                @Html.EditorFor(model => model.memname, new { htmlAttributes = new { @class = "form-control", required = "required" } })
                @Html.ValidationMessageFor(model => model.memname, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2">性別</label>
            @*@Html.LabelFor(model => model.memsex, htmlAttributes: new { @class = "control-label col-md-2" })*@
            <div class="col-md-10">
                <input type="radio" name="memsex" value="0" checked>男
                <input type="radio" name="memsex" value="1">女
                @*@Html.EditorFor(model => model.memsex, new { htmlAttributes = new { @class = "form-control" } })*@
                @*@Html.ValidationMessageFor(model => model.memsex, "", new { @class = "text-danger" })*@
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2">生日</label>
            @*@Html.LabelFor(model => model.membirth, htmlAttributes: new { @class = "control-label col-md-2" })*@
            <div class="col-md-10">
                @Html.EditorFor(model => model.membirth, new { htmlAttributes = new { @class = "form-control", type = "date", required = "required" } })
                @Html.ValidationMessageFor(model => model.membirth, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2">電話</label>
            @*@Html.LabelFor(model => model.memtel, htmlAttributes: new { @class = "control-label col-md-2" })*@
            <div class="col-md-10">
                @Html.EditorFor(model => model.memtel, new { htmlAttributes = new { @class = "form-control", type="tel", required = "required" } })
                @Html.ValidationMessageFor(model => model.memtel, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2">地址</label>
            @*@Html.LabelFor(model => model.memaddress, htmlAttributes: new { @class = "control-label col-md-2" })*@
            <div class="col-md-10">
                @Html.EditorFor(model => model.memaddress, new { htmlAttributes = new { @class = "form-control", required = "required" } })
                @Html.ValidationMessageFor(model => model.memaddress, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2">照片</label>
            @*@Html.LabelFor(model => model.mempic, htmlAttributes: new { @class = "control-label col-md-2" })*@
            <div class="col-md-10">
                @*@Html.EditorFor(model => model.mempic, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.mempic, "", new { @class = "text-danger" })*@
                <table>
                    <tr>
                        <td>
                            <div id="imgPreview1">
                                <img width="100" height="100" src="#">
                            </div>
                            <input type="file" name="file" onchange="PreviewImage1(this)">
                        </td>
                    </tr>
                </table>               
            </div>                     
        </div>

        <div class="form-group">
            <label class="control-label col-md-2">會員帳號狀態</label>
            <input type="radio" name="memaccountstate" value="0" checked>啟用
            <input type="radio" name="memaccountstate" value="1">停用
            @*@Html.LabelFor(model => model.memaccountstate, htmlAttributes: new { @class = "control-label col-md-2" })*@
            <div class="col-md-10">
                @*@Html.EditorFor(model => model.memaccountstate, new { htmlAttributes = new { @class = "form-control" } })*@
                @*@Html.ValidationMessageFor(model => model.memaccountstate, "", new { @class = "text-danger" })*@
            </div>
        </div>

        @{
            Random ran = new Random();
            String memCheckNumber = "";
            for (int i = 0; i < 5; i++)
            {
                memCheckNumber += ran.Next(0, 9);
            }
            @Html.Hidden("memchecknumber", @memCheckNumber)
        }

        @*<div class="form-group">
                <label class="control-label col-md-2">會員驗證碼</label>
                @Html.LabelFor(model => model.memchecknumber, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.memchecknumber, new { htmlAttributes = new { @class = "form-control", required = "required" } })
                    @Html.ValidationMessageFor(model => model.memchecknumber, "", new { @class = "text-danger" })
                </div>
            </div>*@

        @Html.Hidden("memcreatedate", DateTime.Now)
        @Html.Hidden("memupdatedate", DateTime.Now)

        @*<div class="form-group">
                <label class="control-label col-md-2">建立日期</label>
                <div class="col-md-10">
                    @Html.EditorFor(model => model.memcreatedate, new { htmlAttributes = new { @class = "form-control", required = "required" ,type = "Date" } })
                    @Html.ValidationMessageFor(model => model.memcreatedate, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <label class="control-label col-md-2">更新日期</label>
                <div class="col-md-10">
                    @Html.EditorFor(model => model.memupdatedate, new { htmlAttributes = new { @class = "form-control" ,type = "Date" } })
                    @Html.ValidationMessageFor(model => model.memupdatedate, "", new { @class = "text-danger" })
                </div>
            </div>*@

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="新增" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("返回列表", "Index")
</div>
